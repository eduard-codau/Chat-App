# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import requests
from PyQt5.QtWidgets import QTableWidgetItem, QAbstractItemView, QMessageBox


class Ui_Widget(object):
    def setupUi(self, Widget):
        self.users = {}
        Widget.setObjectName("Widget")
        Widget.resize(821, 537)
        self.tableWidget = QtWidgets.QTableWidget(Widget)
        self.tableWidget.setGeometry(QtCore.QRect(20, 100, 781, 361))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(8)
        self.tableWidget.setRowCount(0)
        self.tableWidget.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.tableWidget.setSelectionMode(QAbstractItemView.SingleSelection)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(7, item)

        self.pushButton = QtWidgets.QPushButton(Widget)
        self.pushButton.setGeometry(QtCore.QRect(20, 490, 93, 29))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.blockUser)
        self.pushButton_2 = QtWidgets.QPushButton(Widget)
        self.pushButton_2.setGeometry(QtCore.QRect(130, 490, 93, 29))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.unblockUser)
        self.label = QtWidgets.QLabel(Widget)
        self.label.setGeometry(QtCore.QRect(30, 30, 251, 61))
        font = QtGui.QFont()
        font.setFamily("Gill Sans MT")
        font.setPointSize(28)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.retranslateUi(Widget)
        QtCore.QMetaObject.connectSlotsByName(Widget)

    def retranslateUi(self, Widget):
        _translate = QtCore.QCoreApplication.translate
        Widget.setWindowTitle(_translate("Widget", "Widget"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Widget", "user_id"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Widget", "email"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Widget", "username"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Widget", "lastLoginDate"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Widget", "role"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("Widget", "active"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("Widget", "notLocked"))
        item = self.tableWidget.horizontalHeaderItem(7)
        item.setText(_translate("Widget", "authorities"))

        self.pushButton.setText(_translate("Widget", "Block"))
        self.pushButton_2.setText(_translate("Widget", "Unblock"))
        self.label.setText(_translate("Widget", "Admin Panel"))

    def loadData(self):
        response = requests.get("http://localhost:8083/api/user/users")
        print(response.json())
        self.tableWidget.setRowCount(0)
        for user in response.json():
            self.users[user['userId']] = user
            rowPosition = self.tableWidget.rowCount()
            self.tableWidget.insertRow(rowPosition)
            self.tableWidget.setItem(rowPosition,0,QTableWidgetItem(str(user['userId'])))
            self.tableWidget.setItem(rowPosition, 1, QTableWidgetItem(str(user['email'])))
            self.tableWidget.setItem(rowPosition, 2, QTableWidgetItem(str(user['username'])))
            self.tableWidget.setItem(rowPosition, 3, QTableWidgetItem(str(user['lastLoginDate'])))
            self.tableWidget.setItem(rowPosition, 4, QTableWidgetItem(str(user['role'])))
            self.tableWidget.setItem(rowPosition, 5, QTableWidgetItem(str(user['active'])))
            self.tableWidget.setItem(rowPosition, 6, QTableWidgetItem(str(user['notLocked'])))

            data = ""
            for authority in user['authorities']:
                data += authority + "\n"
            data = data[:-1]
            self.tableWidget.setItem(rowPosition, 7, QTableWidgetItem(str(data)))
        # self.tableWidget.insertRow()

    def blockUser(self):
        if len(self.tableWidget.selectionModel().selectedRows()) <= 0:
            QMessageBox.warning(self.tableWidget,"Eroare","Nu ati selectat niciun rand")
            return

        index = self.tableWidget.currentRow()
        userId = self.tableWidget.item(index,0)
        # print(userId.text())
        updatedUser = self.users[int(userId.text())]

        if updatedUser['notLocked'] == 0:
            QMessageBox.information(self.tableWidget, "Block", "Utilizatorul este deja blocat")
            return

        updatedUser['notLocked'] = 0
        res = requests.post(url="http://localhost:8083/api/user/updateuser",json=updatedUser)

        if res.status_code == 200:
            QMessageBox.information(self.tableWidget,"Block","Utilizatorul a fost blocat")
            self.loadData()
            # messageBox.

    def unblockUser(self):
        if len(self.tableWidget.selectionModel().selectedRows()) <= 0:
            QMessageBox.warning(self.tableWidget,"Eroare","Nu ati selectat niciun rand")
            return

        index = self.tableWidget.currentRow()
        userId = self.tableWidget.item(index,0)
        # print(userId.text())
        updatedUser = self.users[int(userId.text())]
        if updatedUser['notLocked'] == 1:
            QMessageBox.information(self.tableWidget, "Unblock", "Utilizatorul este deja deblocat")
            return

        updatedUser['notLocked'] = 1
        res = requests.post(url="http://localhost:8083/api/user/updateuser",json=updatedUser)

        if res.status_code == 200:
            QMessageBox.information(self.tableWidget,"Unblock","Utilizatorul a fost deblocat")
            self.loadData()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Widget = QtWidgets.QWidget()
    ui = Ui_Widget()
    ui.setupUi(Widget)
    Widget.show()
    ui.loadData()
    sys.exit(app.exec_())
